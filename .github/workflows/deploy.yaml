name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-24.04
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'release') || contains(github.event.head_commit.message, 'Release')

    steps:

      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4.6.0
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Extract version and artifact name
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          ARTIFACT=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_ENV

      - name: Set up Parameters
        run: |
          REPO=$(basename $GITHUB_REPOSITORY)
          echo "repository=$REPO" >> $GITHUB_ENV
          echo "token=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Print Nexus credentials and URL hash
        run: |
          echo -n "https://mcmodersd.de/nexus/repository/maven-releases/" | sha256sum
          echo -n "${{ secrets.NEXUS_USERNAME }}" | sha256sum
          echo -n "${{ secrets.NEXUS_PASSWORD }}" | sha256sum

      - name: Set up Maven with Nexus credentials
        run: |
          cat <<EOL > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>Nexus</id>
                <username>${{ secrets.NEXUS_USERNAME }}</username>
                <password>${{ secrets.NEXUS_PASSWORD }}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>Nexus</id>
                  <repositories>
                    <repository>
                      <id>Nexus</id>
                      <url>https://mcmodersd.de/nexus/repository/maven-releases/</url>
                    </repository>
                  </repositories>
              </profile>
            </profiles>
          </settings>
          EOL

      - name: Build and Deploy
        run: mvn clean install deploy

      - name: Install GitHub CLI and authenticate
        run: |
          curl -sSL https://github.com/cli/cli/releases/download/v2.63.2/gh_2.63.2_linux_amd64.deb -o gh-cli.deb
          sudo dpkg -i gh-cli.deb
          sudo apt install -f
          echo ${{ env.token }} | gh auth login --with-token

      - name: Check for existing release
        run: |
          VERSION="${{ env.version }}"
          TAG_EXISTS=$(gh release view "$VERSION" --json tagName --jq ".tagName" 2>&1 || true)
          echo "TAG_EXISTS: $TAG_EXISTS"
          if [[ "$TAG_EXISTS" == *"release not found"* ]]; then
            echo "No release tag found for version $VERSION."
          else
            echo "Release tag found: $TAG_EXISTS"
            echo "Deleting release and tag: $TAG_EXISTS"
            gh release delete "$TAG_EXISTS" -y --cleanup-tag
            if git rev-parse "$TAG_EXISTS" >/dev/null 2>&1; then
              git tag -d "$TAG_EXISTS"
              git push origin --delete "$TAG_EXISTS"
            else
              echo "Tag $TAG_EXISTS not found locally."
            fi
          fi

      - name: Get latest existing release tag
        run: |
          TAG=$(git tag --sort=-creatordate | grep -v "${{ env.version }}" | head -n 1 || true)
          if [ -z "$TAG" ]; then
            echo "No previous tag found."
            CHANGELOG_URL="https://github.com/${{ github.repository }}/commits/${{ env.version }}"
          else
            echo "Previous tag: $TAG"
            CHANGELOG_URL="https://github.com/${{ github.repository }}/compare/$TAG...${{ env.version }}"
          fi
          echo "tag=$TAG" >> $GITHUB_ENV
          echo "changelog_url=$CHANGELOG_URL" >> $GITHUB_ENV

      - name: Calculate Hashes
        run: |
          FILE=target/${{ env.artifact }}.jar
          MD5=$(md5sum "$FILE" | cut -d ' ' -f 1)
          SHA1=$(sha1sum "$FILE" | cut -d ' ' -f 1)
          SHA256=$(sha256sum "$FILE" | cut -d ' ' -f 1)
          echo "md5=$MD5" >> $GITHUB_ENV
          echo "sha1=$SHA1" >> $GITHUB_ENV
          echo "sha256=$SHA256" >> $GITHUB_ENV
          echo "file=$FILE" >> $GITHUB_ENV

      - name: Create new release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.file }}
          tag_name: ${{ env.version }}
          name: "${{ env.repository}} - Release ${{ env.version }}"
          body: |
            **Full Changelog**: ${{ env.changelog_url }}

            ## Checksums:

            - MD5: ${{ env.md5 }}
            - SHA1: ${{ env.sha1 }}
            - SHA256: ${{ env.sha256 }}